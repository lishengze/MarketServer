syntax = "proto3";

import "gogo.proto";
import "google/protobuf/empty.proto";
import "quote_data.proto";
package quote.service.v1;

// Risk Controller API
service RiskController {
    // 发布聚合行情（用于撮合）
    rpc ServeMarketStream4Broker(.google.protobuf.Empty) returns (stream MultiMarketStreamData){}

    // 发布聚合行情（用于对冲）
    rpc ServeMarketStream4Hedge(.google.protobuf.Empty) returns (stream MultiMarketStreamData){}

    // 发布聚合行情（用于客户端显示）
    rpc ServeMarketStream4Client(.google.protobuf.Empty) returns (stream MultiMarketStreamData){}

    // 客户端 对冲订单推流
    rpc PutOrderStream(stream MultiOrderStreamData) returns (.google.protobuf.Empty){} 
}

message MultiOrderStreamData {
    repeated OrderStreamData orders = 1 [(gogoproto.customname) = "Orders", (gogoproto.jsontag) = "orders"];
}

message OrderStreamData {
    string symbol = 1 [(gogoproto.customname) = "Symbol", (gogoproto.jsontag) = "symbol"];
    string price = 2 [(gogoproto.customname) = "Price", (gogoproto.jsontag) = "price"];
    double order_amount = 3 [(gogoproto.customname) = "OrderAmount", (gogoproto.jsontag) = "order_amount"];
    double hedged_amount = 4 [(gogoproto.customname) = "HedgedAmount", (gogoproto.jsontag) = "hedged_amount"];
    int64 time = 5 [(gogoproto.customname) = "Time", (gogoproto.jsontag) = "time", (gogoproto.casttype) = "wx/pkg/time.Time"];
}